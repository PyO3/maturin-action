name: Test
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: npm install
        run: npm install
      - name: lint
        run: npm run lint

  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    needs: [lint]
    env:
      RUST_BACKTRACE: '1'
    strategy:
      fail-fast: ${{ !contains(github.event.pull_request.labels.*.name, 'CI-no-fail-fast') }}
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        toolchain: [stable, nightly]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: PyO3/maturin
          ref: main
          path: maturin
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - name: maturin build
        uses: ./
        with:
          rust-toolchain: ${{ matrix.toolchain }}
          args: -m maturin/test-crates/pyo3-mixed/Cargo.toml
      - name: maturin build universal2
        if: matrix.os == 'macos-latest'
        uses: ./
        with:
          args: -m maturin/test-crates/pyo3-mixed/Cargo.toml --universal2
      - name: maturin build arm64
        if: matrix.os == 'macos-latest'
        uses: ./
        with:
          target: aarch64-apple-darwin
          args: -m maturin/test-crates/pyo3-mixed/Cargo.toml
      - name: check maturin in PATH
        run: maturin --help
      - name: maturin build manylinux auto
        if: matrix.os == 'ubuntu-latest'
        uses: ./
        with:
          args: -m maturin/test-crates/pyo3-mixed/Cargo.toml
          manylinux: 'auto'
      - name: maturin build manylinux2014
        uses: ./
        with:
          args: -m maturin/test-crates/pyo3-mixed/Cargo.toml
          manylinux: '2014'
      - name: maturin build nightly powerpc64le musl
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.toolchain == 'nightly' }}
        uses: ./
        with:
          rust-toolchain: nightly
          args: -m maturin/test-crates/hello-world/Cargo.toml
          manylinux: 'auto'
          target: 'powerpc64le-unknown-linux-musl'
      - name: maturin build manylinux off
        uses: ./
        with:
          args: -m maturin/test-crates/pyo3-mixed/Cargo.toml
          manylinux: 'off'
      - name: maturin build container off
        uses: ./
        with:
          rustup-components: rustfmt
          args: -m maturin/test-crates/pyo3-mixed/Cargo.toml
          manylinux: 'off'
          container: 'off'
      - name: maturin build --cargo-extra-args
        uses: ./
        with:
          args: -m tests/pyo3-pure/Cargo.toml --cargo-extra-args="--features python"
          manylinux: 'auto'
      - name: docker pull
        if: matrix.os == 'ubuntu-latest'
        run: docker pull quay.io/pypa/manylinux_2_24_x86_64:latest
      - name: maturin build with existing docker image
        if: matrix.os == 'ubuntu-latest'
        uses: ./
        with:
          rustup-components: rustfmt
          container: quay.io/pypa/manylinux_2_24_x86_64:latest
          args: -m maturin/test-crates/pyo3-mixed/Cargo.toml
          manylinux: 'auto'
      - name: maturin build --target args
        if: matrix.os == 'ubuntu-latest'
        uses: ./
        with:
          rust-toolchain: ${{ matrix.toolchain }}
          args: -m maturin/test-crates/pyo3-pure/Cargo.toml --target aarch64-unknown-linux-gnu
      - name: maturin build --zig container off
        uses: ./
        with:
          rust-toolchain: ${{ matrix.toolchain }}
          target: aarch64-unknown-linux-gnu
          args: -m maturin/test-crates/pyo3-pure/Cargo.toml --zig
          manylinux: 'auto'
          container: 'off'
      - name: maturin build --zig
        if: matrix.os == 'ubuntu-latest'
        uses: ./
        with:
          rust-toolchain: ${{ matrix.toolchain }}
          target: aarch64-unknown-linux-gnu
          args: -m maturin/test-crates/pyo3-pure/Cargo.toml --zig
          manylinux: 'auto'

  test-manylinux:
    name: Manylinux Test Suite
    runs-on: ${{ matrix.os }}
    needs: [lint]
    strategy:
      fail-fast: ${{ !contains(github.event.pull_request.labels.*.name, 'CI-no-fail-fast') }}
      matrix:
        os:
          - ubuntu-latest
        platform: [
          {
            manylinux: '2010',
            target: 'x86_64',  # Test target alias
            test-crate: 'maturin/test-crates/pyo3-mixed'
          },
          {
            manylinux: '2010',
            target: 'i686-unknown-linux-gnu',
            test-crate: 'maturin/test-crates/pyo3-mixed'
          },
          {
            manylinux: '2014',
            target: 'aarch64-unknown-linux-gnu',
            test-crate: 'maturin/test-crates/pyo3-pure'  # abi3
          },
          {
            manylinux: '2014',
            target: 'armv7-unknown-linux-gnueabihf',
            test-crate: 'maturin/test-crates/pyo3-pure'  # abi3
          },
          {
            manylinux: '2014',
            target: 'powerpc64le-unknown-linux-gnu',
            test-crate: 'maturin/test-crates/pyo3-mixed'
          },
          {
            manylinux: 'manylinux_2_24',
            target: 'powerpc64le-unknown-linux-gnu',
            test-crate: 'maturin/test-crates/pyo3-mixed'
          },
          {
            manylinux: 'manylinux_2_28',
            target: 'aarch64-unknown-linux-gnu',
            test-crate: 'maturin/test-crates/pyo3-mixed'
          },
          {
            manylinux: 'manylinux2014',
            target: 's390x',
            test-crate: 'maturin/test-crates/pyo3-mixed'
          },
          {
            manylinux: 'auto',
            target: 'x86_64-unknown-linux-musl',  # MUSL
            test-crate: 'maturin/test-crates/hello-world'  # binary
          },
          {
            manylinux: 'musllinux_1_1',
            target: 'x86_64',
            test-crate: 'maturin/test-crates/pyo3-pure'
          },
          {
            manylinux: 'musllinux_1_2',
            target: 'x86_64-unknown-linux-musl',  # MUSL
            test-crate: 'maturin/test-crates/hello-world'  # binary
          },
        ]
        toolchain: [stable, nightly]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: PyO3/maturin
          ref: v0.12.10
          path: maturin
      - name: Set up QEMU
        uses: dbhi/qus/action@main
      - name: maturin build
        uses: ./
        env:
          RUST_BACKTRACE: '1'
          PYO3_CROSS_LIB_DIR: '/opt/python/cp38-cp38/lib'
        with:
          container: ${{ matrix.platform.container }}
          rust-toolchain: ${{ matrix.toolchain }}
          args: -m ${{ matrix.platform.test-crate }}/Cargo.toml -i python3.8 --no-sdist
          manylinux: ${{ matrix.platform.manylinux }}
          target: ${{ matrix.platform.target }}
